{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"LATER",
				"LATER"
			],
			[
				"valu",
				"valueStr"
			],
			[
				"RA",
				"RAWHID_RX_SIZE"
			],
			[
				"map",
				"mapIndexToModelNumber"
			],
			[
				"current",
				"currentcolor"
			],
			[
				"new",
				"newcolor_index"
			],
			[
				"curre",
				"currentcolor_index"
			],
			[
				"colo",
				"color_names"
			],
			[
				"debug",
				"debug_touch"
			],
			[
				"MAD",
				"MADCTL_MH"
			],
			[
				"count",
				"count_connections_"
			],
			[
				"next",
				"next_dcid_"
			],
			[
				"_cs",
				"_cs_flex_pin"
			],
			[
				"_mo",
				"_mosi_flex_pin"
			],
			[
				"sck",
				"_sck_flex_pin"
			],
			[
				"last",
				"last_16Bit_color"
			],
			[
				"or",
				"origin_x"
			],
			[
				"pin",
				"pinIsMOSI"
			],
			[
				"__MK",
				"__MK66FX1M0__"
			],
			[
				"waitF",
				"waitFifoNotFull"
			],
			[
				"ILI",
				"ILI9488_TFTWIDTH"
			],
			[
				"color_index",
				"color_index"
			],
			[
				"_pall",
				"_pallet"
			],
			[
				"_pallet",
				"_pallet_count"
			],
			[
				"writec",
				"write16BitColor"
			],
			[
				"write",
				"writedata16_cont"
			],
			[
				"inq",
				"inquiry_mode"
			],
			[
				"joystick",
				"joystickType_"
			],
			[
				"uint",
				"uint8_t"
			],
			[
				"jo",
				"joystickType"
			],
			[
				"get",
				"getButtons"
			],
			[
				"fr",
				"free_string_buffer"
			],
			[
				"dev",
				"device_driver_"
			],
			[
				"changed",
				"changed_mask"
			],
			[
				"connec",
				"connection_complete_"
			],
			[
				"interrupt",
				"interrupt_scid_"
			],
			[
				"interr",
				"interrupt_dcid_"
			],
			[
				"chan",
				"channelHigh"
			],
			[
				"chann",
				"channelLow"
			],
			[
				"spe",
				"special_case_device"
			],
			[
				"MSB",
				"MSBFIRST"
			],
			[
				"ch",
				"ch_out"
			],
			[
				"CCM_ANALOG",
				"CCM_ANALOG_PLL_VIDEO_CLR"
			]
		]
	},
	"buffers":
	[
		{
			"file": "_Phoenix_Driver_lss.h",
			"settings":
			{
				"buffer_size": 39595,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/GitHub/LSS_Library_Arduino/src/LSS.h",
			"settings":
			{
				"buffer_size": 10711,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\n// Warning setup to build for standard hexapod, octopod, or for quad.\n//  #define QUADMODE\n//  #define HEXMODE\n//  #define OCTOMODE\n//  #define DISPLAY_GAIT_NAMES\n//=============================================================================\n//Project Lynxmotion Phoenix\n//Description: Phoenix software\n//Software version: V2.0\n//Date: 29-10-2009\n//Programmer: Jeroen Janssen [aka Xan]\n//         Kurt Eckhardt(KurtE) converted to C and Arduino\n//   KÃ¥re Halvorsen aka Zenta - Makes everything work correctly!     \n//\n// This version of the Phoenix code was ported over to the Arduino Environement\n//\n//=============================================================================\n// Warning:: This configuration does not check voltages, so you should be careful to\n// not allow the lipo to discharge too far. \n//\n//KNOWN BUGS:\n//    - Lots ;)\n//\n//=============================================================================\n// Header Files\n//=============================================================================\n\n#define DEFINE_HEX_GLOBALS\n#include <Arduino.h>\n#include <EEPROM.h>\n#include <avr/pgmspace.h>\n#define HEXMODE   // default to hex mode\n#include \"Hex_Cfg.h\"\n\n#include <LSS.h>\n#include \"_Phoenix.h\"\n\n#ifdef QUADMODE\n#define ADD_GAITS\n#define PYPOSE_GAIT_SPEED 1 //98\n//  Speed, Steps, Lifted, Front Down, Lifted Factor, Half Height, On Ground, \n//     Quad extra: COGAngleStart, COGAngleStep, CogRadius, COGCCW\n//                      { RR, RF, LR, LF}\nPHOENIXGAIT APG_EXTRA[] = { \n  {PYPOSE_GAIT_SPEED, 8, 2, 1, 2, 6, 1, 0, 0,0, true, {7, 1, 3, 5}},   // ripple\n  {PYPOSE_GAIT_SPEED, 12, 2, 1, 2, 10, 1, 0, 0,0, true, {7, 1, 4, 10}},   // ripple\n  {PYPOSE_GAIT_SPEED, 4, 2, 1, 2, 2, 1, 0, 0, 0, true,{3, 1, 1, 3}},  // Amble\n  {PYPOSE_GAIT_SPEED, 6, 3, 2, 2, 3, 2, 0, 0,0, true, {1, 4, 4, 1}} }; // Smooth Amble \n#endif\n\n#include \"_Phoenix_Input_Commander.h\"\n#include \"_Phoenix_Driver_lss.h\"\n#include \"_Phoenix_Code.h\"\n",
			"file": "LSS_Phoenix.ino",
			"file_size": 1998,
			"file_write_time": 132631385682496540,
			"settings":
			{
				"buffer_size": 1943,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/kurte/Documents/Arduino/Github/LSS_Test_sketches/LSSTestServos/LSSTestServos.ino",
			"settings":
			{
				"buffer_size": 30933,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4EQAAAAAAAHgRAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "Searching 30 files for \"flush\"\n\nC:\\Users\\kurte\\Documents\\Arduino\\Github\\LSS_Test_sketches\\LSS_Phoenix\\_Phoenix_Code.h:\n 1012        DBGSerial.print(\" LFZ:\");\n 1013        DBGSerial.println(LegPosZ[cLF],DEC);\n 1014:       DBGSerial.flush();  // see if forcing it to output helps...\n 1015      }\n 1016  #endif\n\nC:\\Users\\kurte\\Documents\\Arduino\\Github\\LSS_Test_sketches\\LSS_Phoenix\\_Phoenix_Input_Commander.h:\n  587    int cbRead;\n  588    while (XBeeSerial.read() != -1)\n  589:     ;  // Flush out anything still pending. \n  590    XBeeSerial.print(\"AT\");  \n  591    XBeeSerial.println(pszID);  // Lets print out the ID;\n  592:   XBeeSerial.flush();\n  593    cbRead = XBeeSerial.readBytesUntil('\\r', ab, sizeof(ab));\n  594    if (cbRead) {\n  ...\n  608      delay(15);  // see if we have fast command mode enabled.\n  609      XBeeSerial.print(F(\"+++\")); \n  610:     XBeeSerial.flush();\n  611      XBeeSerial.setTimeout(20);  // give a little extra time\n  612      if (XBeeSerial.readBytesUntil('\\r', ab, 10) > 0) {\n  ...\n  683  #ifdef CHECK_AND_CONFIG_XBEE\n  684    while (XBeeSerial.read() != -1)\n  685:     ;  // flush anything out...\n  686    // First lets see if we have a real short command time\n  687    delay(15);  // see if we have fast command mode enabled.\n  688    XBeeSerial.print(F(\"+++\")); \n  689:   XBeeSerial.flush();\n  690    XBeeSerial.setTimeout(20);  // give a little extra time\n  691    if (XBeeSerial.readBytesUntil('\\r', ab, 10) > 0) {\n  ...\n  696    delay(1100);\n  697    while (XBeeSerial.read() != -1)\n  698:     ;  // flush anything out...\n  699    XBeeSerial.print(F(\"+++\"));\n  700    XBeeSerial.setTimeout(1100);  // little over a second\n  ...\n  711    XBeeSerial.begin(9600);\n  712    while (XBeeSerial.read() != -1)\n  713:     ;  // flush anything out...\n  714  \n  715    delay(1100);\n  ...\n  738      XBeeSerial.println(F(\"ATWR\"));\t// Write out the changes\n  739      XBeeSerial.println(F(\"ATCN\"));\t// and exit command mode\n  740:     XBeeSerial.flush();              // make sure all has been output\n  741      // lets do a quick and dirty test\n  742      delay(250);  // Wait a bit for responses..\n\nC:\\Users\\kurte\\Documents\\Arduino\\Github\\LSS_Test_sketches\\LSSTestServos\\LSSTestServos.ino:\n  177  \n  178    Serial.print(\":\");\n  179:   Serial.flush();  // make sure the complete set of prompts has been output...\n  180    // Get a command\n  181    if (GetCommandLine()) {\n  ...\n  676    Serial.printf(\"Start Stack info: end: %x current: %x\\n\", g_end_stack_pointer, (uint32_t)stack_ptr);\n  677    Serial.println(\"Try to init memory\");\n  678:   Serial.flush(); // make sure it has chance to write out.\n  679    uint8_t *sp_minus = stack_ptr - 10;  // leave a little slop\n  680    for (uint8_t *p = (uint8_t*)_sbrk(0); p < sp_minus; p++) *p = 0xff; // init to ff\n\n11 matches across 3 files\n\n\nSearching 27 files for \"unused\"\n\nC:\\Users\\kurte\\Documents\\Arduino\\Github\\LSS_Test_sketches\\LSS_Phoenix\\_Phoenix_Code.h:\n 1909  short CheckServoAngleBounds(short sID,  short sVal, const short *sMin /*PROGMEM*/, const short *sMax /*PROGMEM*/) {\n 1910  #else\n 1911: short CheckServoAngleBounds(short sID __attribute__((unused)),  short sVal, /*PROGMEM*/ const short *sMin , /*PROGMEM*/ const short *sMax ) {\n 1912  #endif\n 1913      // Pull into simple function as so I can report errors on debug \n ....\n 2105      g_wLegsXZLength = 0xffff;\n 2106  #else\n 2107:    iDeltaAngle++;   // remove unused warning...     \n 2108  #endif\n 2109  }\n\nC:\\Users\\kurte\\Documents\\Arduino\\Github\\LSS_Test_sketches\\LSS_Phoenix\\_Phoenix_Input_Commander.h:\n  256  // that we do while it is active...\n  257  //==============================================================================\n  258: void CommanderInputController::AllowControllerInterrupts(boolean fAllow __attribute__((unused)))\n  259  {\n  260    // We don't need to do anything...\n\nC:\\Users\\kurte\\Documents\\Arduino\\Github\\LSS_Test_sketches\\LSSTestServos\\LSSTestServos.ino:\n  697    while ((p < sp_minus) && (*p == 0xff)) p++;\n  698    Serial.printf(\"Stack Max: %x, usage: %d\\n\", p, g_end_stack_pointer - (uint32_t)p);\n  699:   Serial.printf(\"Estimated unused memory: %d\\n\", (uint32_t)(p - current_heap_ptr));\n  700  #endif\n  701  }\n\n4 matches across 3 files\n\n\nSearching 27 files for \"unused\"\n\nC:\\Users\\kurte\\Documents\\Arduino\\Github\\LSS_Test_sketches\\LSS_Phoenix\\_Phoenix_Code.h:\n 1909  short CheckServoAngleBounds(short sID,  short sVal, const short *sMin /*PROGMEM*/, const short *sMax /*PROGMEM*/) {\n 1910  #else\n 1911: short CheckServoAngleBounds(short sID __attribute__((unused)),  short sVal, /*PROGMEM*/ const short *sMin , /*PROGMEM*/ const short *sMax ) {\n 1912  #endif\n 1913      // Pull into simple function as so I can report errors on debug \n ....\n 2105      g_wLegsXZLength = 0xffff;\n 2106  #else\n 2107:    iDeltaAngle++;   // remove unused warning...     \n 2108  #endif\n 2109  }\n\nC:\\Users\\kurte\\Documents\\Arduino\\Github\\LSS_Test_sketches\\LSS_Phoenix\\_Phoenix_Input_Commander.h:\n  256  // that we do while it is active...\n  257  //==============================================================================\n  258: void CommanderInputController::AllowControllerInterrupts(boolean fAllow __attribute__((unused)))\n  259  {\n  260    // We don't need to do anything...\n\nC:\\Users\\kurte\\Documents\\Arduino\\Github\\LSS_Test_sketches\\LSSTestServos\\LSSTestServos.ino:\n  697    while ((p < sp_minus) && (*p == 0xff)) p++;\n  698    Serial.printf(\"Stack Max: %x, usage: %d\\n\", p, g_end_stack_pointer - (uint32_t)p);\n  699:   Serial.printf(\"Estimated unused memory: %d\\n\", (uint32_t)(p - current_heap_ptr));\n  700  #endif\n  701  }\n\n4 matches across 3 files\n\n\nSearching 27 files for \"DMASettings\"\n\n0 matches",
			"settings":
			{
				"buffer_size": 5666,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"contents": "//====================================================================\n//Project Lynxmotion Phoenix\n//Description: \n//    This is the hardware configuration file for the \n//    Will first define to use their commander unit.\n//\n//\n//\n//====================================================================\n#ifndef HEX_CFG_H\n#define HEX_CFG_H\n//==================================================================================================================================\n// Define which input classes we will use. If we wish to use more than one we need to define USEMULTI - This will define a forwarder\n//    type implementation, that the Inputcontroller will need to call.  There will be some negotion for which one is in contol.\n//\n//  If this is not defined, The included Controller should simply implement the InputController Class...\n//==================================================================================================================================\n#define USECOMMANDER\n#define LSS_SERIAL_PORT     Serial1\n#define LSS_BAUD            250000\n// Global defines to control which configuration we are using.  Note: Only define one of these...\n// \n// Which type of control(s) do you want to compile in\n#if defined(KINETISK) || defined(__IMXRT1062__)\n#define DBGSerial         Serial\n#else\n#if defined(UBRR2H)\n#define DBGSerial         Serial\n#endif\n#endif \n\n// Define other optional compnents to be included or not...\n//#define cFemurHornOffset1 -35\n//#define cTibiaHornOffset1 463\n#define cRRTibiaInv 0 \n#define cRMTibiaInv 0 \n#define cRFTibiaInv 0 \n#define cLRTibiaInv 1 \n#define cLMTibiaInv 1 \n#define cLFTibiaInv 1 \n\n\n//===================================================================\n// Debug Options\n#ifdef DBGSerial\n#define OPT_TERMINAL_MONITOR  \n#define OPT_TERMINAL_MONITOR_IC    // Allow the input controller to define stuff as well\n#define OPT_FIND_SERVO_OFFSETS    // Only useful if terminal monitor is enabled\n#endif\n\n//#define DEBUG_IOPINS\n#ifdef DEBUG_IOPINS\n#define DebugToggle(pin)  {digitalWrite(pin, !digitalRead(pin));}\n#define DebugWrite(pin, state) {digitalWrite(pin, state);}\n#else\n#define DebugToggle(pin)  {;}\n#define DebugWrite(pin, state) {;}\n#endif\n\n\n// Also define that we are using the AX12 driver\n#define USE_AX12_DRIVER\n#define OPT_BACKGROUND_PROCESS    // The AX12 has a background process\n#define OPT_CHECK_SERVO_RESET     // Try to find single servo that reset it's ID...\n#define OPT_GPPLAYER\n\n#define OPT_SINGLELEG      \n\n//==================================================================================================================================\n//==================================================================================================================================\n//==================================================================================================================================\n//  PhantomX\n//==================================================================================================================================\n//[SERIAL CONNECTIONS]\n\n//====================================================================\n// XBEE on non mega???\n#if defined(KINETISK) || defined(__IMXRT1062__)\n#define XBeeSerial Serial2\n#else\n#if defined(UBRR2H)\n#define XBeeSerial Serial2\n#endif\n#define XBeeSerial Serial\n#endif\n#define XBEE_BAUD        38400\n//--------------------------------------------------------------------\n//[Arbotix Pin Numbers]\n#if defined(KINETISK) || defined(__IMXRT1062__)\n#define SOUND_PIN    36\n#else\n#define SOUND_PIN    1 //0xff        // Tell system we have no IO pin...\n#define USER 0                        // defaults to 13 but Arbotix on 0...\n#endif\n\n// Define Analog pin and minimum voltage that we will allow the servos to run\n#if defined(KINETISK) ||  defined(__IMXRT1062__)\n// Our Teensy board\n#define cVoltagePin  38\n#define CVADR1      402  // VD Resistor 1 - reduced as only need ratio... 40.2K and 10K\n#define CVADR2      100    // VD Resistor 2\n#define CVREF       330    // 3.3v\n#endif\n//#define cVoltagePin  7      // Use our Analog pin jumper here...\n//#define CVADR1      1000  // VD Resistor 1 - reduced as only need ratio... 20K and 4.66K\n//#define CVADR2      233   // VD Resistor 2\n//#define cTurnOffVol  1000     // 10v\n//#define cTurnOnVol   1100     // 11V - optional part to say if voltage goes back up, turn it back on...\n\n//====================================================================\n#define  DEFAULT_GAIT_SPEED 35  // Default gait speed  - Will depend on what Servos you are using...\n#define  DEFAULT_SLOW_GAIT  50  // Had a couple different speeds...\n\n//====================================================================\n// Defines for Optional XBee Init and configuration code.\n//====================================================================\n#define CHECK_AND_CONFIG_XBEE\n#define DEFAULT_MY 0x101  // Swap My/DL on 2nd unit\n#define DEFAULT_DL 0x102\n#define DEFAULT_ID 0x3332\n\n//--------------------------------------------------------------------\n// Define which pins(sevo IDS go with which joint\n\n#define cRRCoxaPin      8   //Rear Right leg Hip Horizontal\n#define cRRFemurPin     10   //Rear Right leg Hip Vertical\n#define cRRTibiaPin     12   //Rear Right leg Knee\n\n#define cRMCoxaPin      14  //Middle Right leg Hip Horizontal\n#define cRMFemurPin     16  //Middle Right leg Hip Vertical\n#define cRMTibiaPin     18  //Middle Right leg Knee\n\n#define cRFCoxaPin      2  //Front Right leg Hip Horizontal\n#define cRFFemurPin     4  //Front Right leg Hip Vertical\n#define cRFTibiaPin     6   //Front Right leg Knee\n\n#define cLRCoxaPin      7   //Rear Left leg Hip Horizontal\n#define cLRFemurPin     9   //Rear Left leg Hip Vertical\n#define cLRTibiaPin     11   //Rear Left leg Knee\n\n#define cLMCoxaPin      13   //Middle Left leg Hip Horizontal\n#define cLMFemurPin     15   //Middle Left leg Hip Vertical\n#define cLMTibiaPin     17  //Middle Left leg Knee\n\n#define cLFCoxaPin      1   //Front Left leg Hip Horizontal\n#define cLFFemurPin     3   //Front Left leg Hip Vertical\n#define cLFTibiaPin     5   //Front Left leg Knee\n\n//#define cTurretRotPin  20   // Turret Rotate Pin\n//#define cTurretTiltPin 21  // Turret Tilt pin\n\n//--------------------------------------------------------------------\n//[MIN/MAX ANGLES] - Start off assume same as Phoenix...\n#define cRRCoxaMin1    -750\n#define cRRCoxaMax1    750\n#define cRRFemurMin1    -1000\n#define cRRFemurMax1    1000\n#define cRRTibiaMin1    -1020\n#define cRRTibiaMax1    670\n\n#define cRMCoxaMin1    -750    //Mechanical limits of the Right Middle Leg, decimals = 1\n#define cRMCoxaMax1     750\n#define cRMFemurMin1     -1000\n#define cRMFemurMax1     1000\n#define cRMTibiaMin1    -1020\n#define cRMTibiaMax1     670\n\n#define cRFCoxaMin1    -750    //Mechanical limits of the Right Front Leg, decimals = 1\n#define cRFCoxaMax1     750\n#define cRFFemurMin1    -1000\n#define cRFFemurMax1    1000\n#define cRFTibiaMin1    -1020\n#define cRFTibiaMax1    670\n\n#define cLRCoxaMin1    -750    //Mechanical limits of the Left Rear Leg, decimals = 1\n#define cLRCoxaMax1     750\n#define cLRFemurMin1     -1000\n#define cLRFemurMax1     1000\n#define cLRTibiaMin1    -1020\n#define cLRTibiaMax1     670\n\n#define cLMCoxaMin1    -1000    //Mechanical limits of the Left Middle Leg, decimals = 1\n#define cLMCoxaMax1     1000\n#define cLMFemurMin1     -1000\n#define cLMFemurMax1     1000\n#define cLMTibiaMin1    -1020\n#define cLMTibiaMax1     670\n\n#define cLFCoxaMin1     -750    //Mechanical limits of the Left Front Leg, decimals = 1\n#define cLFCoxaMax1     750\n#define cLFFemurMin1     -1000\n#define cLFFemurMax1     1000\n#define cLFTibiaMin1    -1020\n#define cLFTibiaMax1     670\n\n#define cTurretRotMin1  -1500\n#define cTurretRotMax1  1500\n#define cTurretTiltMin1  -125\n#define cTurretTiltMax1  1100\n\n//--------------------------------------------------------------------\n//[Joint offsets]\n// This allows us to calibrate servos to some fixed position, and then adjust them by moving theim\n// one or more servo horn clicks.  This requires us to adjust the value for those servos by 15 degrees\n// per click.  This is used with the T-Hex 4DOF legs\n//First calibrate the servos in the 0 deg position using the SSC-32 reg offsets, then:\n//--------------------------------------------------------------------\n//[LEG DIMENSIONS]\n//Universal dimensions for each leg in mm\n#define cXXCoxaLength     52    // PhantomX leg dimensions.\n#define cXXFemurLength    80    // MEASURE THIS!!! Guessed now :-)\n#define cXXTibiaLength    100  // MEASURE THIS!!! Guessed now :-)\n\n#define cRRCoxaLength     cXXCoxaLength\t    //Right Rear leg\n#define cRRFemurLength    cXXFemurLength\n#define cRRTibiaLength    cXXTibiaLength\n\n\n#define cRMCoxaLength     cXXCoxaLength\t    //Right middle leg\n#define cRMFemurLength    cXXFemurLength\n#define cRMTibiaLength    cXXTibiaLength\n\n\n#define cRFCoxaLength     cXXCoxaLength\t    //Rigth front leg\n#define cRFFemurLength    cXXFemurLength\n#define cRFTibiaLength    cXXTibiaLength\n\n\n#define cLRCoxaLength     cXXCoxaLength\t    //Left Rear leg\n#define cLRFemurLength    cXXFemurLength\n#define cLRTibiaLength    cXXTibiaLength\n\n\n#define cLMCoxaLength     cXXCoxaLength\t    //Left middle leg\n#define cLMFemurLength    cXXFemurLength\n#define cLMTibiaLength    cXXTibiaLength\n\n\n#define cLFCoxaLength     cXXCoxaLength\t    //Left front leg\n#define cLFFemurLength    cXXFemurLength\n#define cLFTibiaLength    cXXTibiaLength\n\n\n\n//--------------------------------------------------------------------\n//[BODY DIMENSIONS]\n#define cRRCoxaAngle1   -450   //Default Coxa setup angle, decimals = 1\n#define cRMCoxaAngle1    0      //Default Coxa setup angle, decimals = 1\n#define cRFCoxaAngle1    450      //Default Coxa setup angle, decimals = 1\n#define cLRCoxaAngle1    -450   //Default Coxa setup angle, decimals = 1\n#define cLMCoxaAngle1    0      //Default Coxa setup angle, decimals = 1\n#define cLFCoxaAngle1    450      //Default Coxa setup angle, decimals = 1\n\n#define X_COXA      60  // MM between front and back legs /2\n#define Y_COXA      60  // MM between front/back legs /2\n#define M_COXA      100  // MM between two middle legs /2\n\n#define cRROffsetX      -60     //Distance X from center of the body to the Right Rear coxa\n#define cRROffsetZ      120     //Distance Z from center of the body to the Right Rear coxa\n\n#define cRMOffsetX      -100    //Distance X from center of the body to the Right Middle coxa\n#define cRMOffsetZ      0       //Distance Z from center of the body to the Right Middle coxa\n\n#define cRFOffsetX      -60     //Distance X from center of the body to the Right Front coxa\n#define cRFOffsetZ      -120    //Distance Z from center of the body to the Right Front coxa\n\n#define cLROffsetX      60      //Distance X from center of the body to the Left Rear coxa\n#define cLROffsetZ      120     //Distance Z from center of the body to the Left Rear coxa\n\n#define cLMOffsetX      100     //Distance X from center of the body to the Left Middle coxa\n#define cLMOffsetZ      0       //Distance Z from center of the body to the Left Middle coxa\n\n#define cLFOffsetX      60      //Distance X from center of the body to the Left Front coxa\n#define cLFOffsetZ      -120    //Distance Z from center of the body to the Left Front coxa\n\n//--------------------------------------------------------------------\n//[START POSITIONS FEET]\n#define cHexInitXZ\t 147\n#define CHexInitXZCos60  104        // COS(45) = .707\n#define CHexInitXZSin60  104    // sin(45) = .707\n#define CHexInitY\t 25 //30\n\n// Lets try some multi leg positions depending on height settings.\n#define CNT_HEX_INITS 2\n#define MAX_BODY_Y  150\n#ifdef DEFINE_HEX_GLOBALS\nconst byte g_abHexIntXZ[] PROGMEM = {cHexInitXZ, 144};\nconst byte g_abHexMaxBodyY[] PROGMEM = { 20, MAX_BODY_Y};\n#else\nextern const byte g_abHexIntXZ[] PROGMEM;\nextern const byte g_abHexMaxBodyY[] PROGMEM;\n#endif\n\n#define cRRInitPosX     CHexInitXZCos60      //Start positions of the Right Rear leg\n#define cRRInitPosY     CHexInitY\n#define cRRInitPosZ     CHexInitXZSin60\n\n#define cRMInitPosX     cHexInitXZ      //Start positions of the Right Middle leg\n#define cRMInitPosY     CHexInitY\n#define cRMInitPosZ     0\n\n#define cRFInitPosX     CHexInitXZCos60      //Start positions of the Right Front leg\n#define cRFInitPosY     CHexInitY\n#define cRFInitPosZ     -CHexInitXZSin60\n\n#define cLRInitPosX     CHexInitXZCos60      //Start positions of the Left Rear leg\n#define cLRInitPosY     CHexInitY\n#define cLRInitPosZ     CHexInitXZSin60\n\n#define cLMInitPosX     cHexInitXZ      //Start positions of the Left Middle leg\n#define cLMInitPosY     CHexInitY\n#define cLMInitPosZ     0\n\n#define cLFInitPosX     CHexInitXZCos60      //Start positions of the Left Front leg\n#define cLFInitPosY     CHexInitY\n#define cLFInitPosZ     -CHexInitXZSin60\n\n// Turret initial position\n#define cTurretRotInit  0\n#define cTurretTiltInit 0\n\n\n//--------------------------------------------------------------------\n//[Tars factors used in formula to calc Tarsus angle relative to the ground]\n#define cTarsst\t720\t//4DOF ONLY\n#define cTarsMulti\t2\t//4DOF ONLY\n#define cTarsFactorA\t70\t//4DOF ONLY\n#define cTarsFactorB\t60\t//4DOF ONLY\n#define cTarsFactorC\t50\t//4DOF ONLY\n\n#endif // HEX_CFG_H\n",
			"file": "Hex_Cfg.h",
			"file_size": 13540,
			"file_write_time": 132645488500701772,
			"settings":
			{
				"buffer_size": 13209,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"left_delete",
					null,
					"AQAAAAIPAAAAAAAAAg8AAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAw8AAAAAAAADDwAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "38"
					},
					"AgAAAAIPAAAAAAAAAw8AAAAAAAAAAAAAAw8AAAAAAAAEDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAg8AAAAAAAACDwAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/User/Teensy.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/Teensy.sublime-build",
					""
				],
				[
					"Packages/User/Teensy.sublime-build",
					"Clean"
				],
				[
					"Packages/User/Teensy.sublime-build",
					"New Sketch"
				],
				[
					"Packages/User/Teensy.sublime-build",
					"Verify"
				],
				[
					"Packages/User/Teensy.sublime-build",
					"Tools Set"
				]
			],
			[
				"Packages/User/Teensy.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/Teensy.sublime-build",
					""
				],
				[
					"Packages/User/Teensy.sublime-build",
					"Clean"
				],
				[
					"Packages/User/Teensy.sublime-build",
					"New Sketch"
				],
				[
					"Packages/User/Teensy.sublime-build",
					"Verify"
				],
				[
					"Packages/User/Teensy.sublime-build",
					"Tools Set"
				]
			],
			[
				"Packages/User/Teensy.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Deviot: ",
				"Deviot: Show Deviot Console"
			],
			[
				"usb",
				"USB Logic Packet format"
			],
			[
				"regreplace: r",
				"RegReplace: Settings"
			],
			[
				"regreplace edit",
				"RegReplace: Edit Regular Expression Rule"
			],
			[
				"regreplace ",
				"RegReplace: Create New Regular Expression Rule"
			],
			[
				"regreplace:",
				"RegReplace: Quick Start Guide"
			],
			[
				"regreplace: ",
				"RegReplace: Create New Regular Expression Rule"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"packag",
				"Package Control: Install Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"package",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 286.0,
		"history":
		[
			"view.run_command(\"example\")",
			"view.run_command(\"example\""
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/GitHub/LSS_Library_Arduino",
		"/D/GitHub/LSS_Library_Arduino/src"
	],
	"file_history":
	[
		"/C/Users/kurte/Documents/Arduino/libraries/LSS_Library_Arduino/src/LSS.cpp",
		"/D/GitHub/LSS_Library_Arduino/src/LSS.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/serialEvent1.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/serialEvent2.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/HardwareSerial.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/HardwareSerial.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/pins_teensy.c",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/yield.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/serialEvent1.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/HardwareSerial2.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/core_pins.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/HardwareSerial1.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/HardwareSerial3.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/HardwareSerial4.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/HardwareSerial5.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/HardwareSerial6.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/serial1.c",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/serialEvent6.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/EventResponder.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/HardwareSerial2.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/usb_inst.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/wiring_private.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/kinetis.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/EventResponder.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/serialEventUSB2.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/EventResponder.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/yield.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/core_pins.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/mk20dx128.c",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/HardwareSerial.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/HardwareSerial1.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/serialEvent2.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/serialEvent3.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/serialEvent4.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/serialEvent5.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/HardwareSerial.cpp",
		"/C/Users/kurte/AppData/Local/Temp/arduino_build_LSS_Phoenix.ino/sketch/_Phoenix_Driver_lss.h",
		"/C/Users/kurte/AppData/Local/Temp/arduino_build_LSS_Phoenix.ino/sketch/_Phoenix_Input_Commander.h",
		"/C/Users/kurte/Documents/Arduino/Github/LSS_Test_sketches/LSS_Phoenix/Compile.cmd",
		"/C/Users/kurte/Documents/Arduino/libraries/AlternativeLSS/src/LynxmotionLSS.cpp",
		"/C/Users/kurte/Documents/Arduino/libraries/AlternativeLSS/src/LynxmotionLSS.h",
		"/C/Users/kurte/Documents/Arduino/Teensy Tests/Configure_test_graphicstest9488/libraries/Configure/ILI9488_sketch_options.h",
		"/C/Users/kurte/Documents/Arduino/libraries/ILI9488_options/ILI9488_sketch_options.h",
		"/C/Users/kurte/Documents/Arduino/libraries/ILI9488_t3/src/ILI9488_enable_extmem.h",
		"/C/Users/kurte/Documents/Arduino/libraries/ILI9341_t3n/src/ILI9341_t3n.h",
		"/C/Users/kurte/Documents/Arduino/libraries/ILI9341_t3n/src/ILI9341_t3n.cpp",
		"/C/Users/kurte/Documents/Arduino/libraries/Ra8876LiteTeensy/src/RA8876_t3.h",
		"/C/Users/kurte/Documents/Arduino/libraries/Ra8876LiteTeensy/src/RA8876_t3.cpp",
		"/C/Users/kurte/Documents/Arduino/libraries/Ra8876LiteTeensy/src/Ra8876_Lite.h",
		"/C/Users/kurte/Documents/Arduino/libraries/ILI9488_t3/ILI9488_t3.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/ILI9488_t3/ILI9488_t3.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/eeprom.c",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/digital.c",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/HardwareSerial5.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/HardwareSerial3.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/HardwareSerial8.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/AudioStream.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/pwm.c",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/startup.c",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/RA8875/_settings/RA8875UserSettings.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/bootdata.c",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/avr/eeprom.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/analog.c",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/RA8875/RA8875.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/RA8875/RA8875.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/platform.txt",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/USBHost_t36/mouse.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/USBHost_t36/keyboard.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/USBHost_t36/hid.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/USBHost_t36/rawhid.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/USBHost_t36/enumeration.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/USBHost_t36/print.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/ST7735_t3/examples/ILI_Ada_FontTest4/ILI_Ada_FontTest4.ino",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/DMAChannel.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/DMAChannel.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/ST7735_t3/ST7735_t3.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/ST7735_t3/ST7735_t3.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/boards.txt",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/SPI/SPI.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/SPI/SPI.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/IntervalTimer.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/Encoder/Encoder.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/Wire/WireKinetis.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/IntervalTimer.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/mk66fx1m0.ld",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/WString.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/Wire/WireKinetis.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/Wire/WireIMXRT.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/imxrt1062.ld",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/mk20dx128.ld",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/mk20dx256.ld",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/mk64fx512.ld",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/Wire/WireIMXRT.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/FreqMeasureMulti/FreqMeasureMultiIMXRT.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/usb_desc.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/usb.c",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/usb_desc.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/usb_dev.h",
		"/D/GitHub/cores/teensy4/usb_rawhid.c",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy3/usb_rawhid.c",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/debug/printf.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/debugprintf.c",
		"/C/Users/kurte/Desktop/mouse_v1.txt",
		"/C/Users/kurte/Desktop/u2",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/FreqMeasure/FreqMeasure.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/FreqMeasure/FreqMeasure.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/FreqMeasure/util/FreqMeasureCapture.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/FreqMeasureMulti/FreqMeasureMulti.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/FreqMeasureMulti/FreqMeasureMulti.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/pins_arduino.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/Servo/Servo.cpp",
		"/D/GitHub/SPI/SPI.cpp",
		"/D/GitHub/SPI/SPI.h",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/imxrt1062_t41.ld",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/usb_desc.c",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/Adafruit_GFX/fontconvert/fontconvert.c",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/Adafruit_GFX/Adafruit_SPITFT.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/cores/teensy4/new.cpp",
		"/C/arduino-1.8.12/hardware/teensy/avr/libraries/Adafruit_GFX/Adafruit_GFX.cpp",
		"/C/arduino-1.8.11/hardware/teensy/avr/cores/teensy3/usb_desc.h",
		"/C/arduino-1.8.11/hardware/teensy/avr/cores/teensy3/usb_undef.h",
		"/C/arduino-1.8.11/hardware/teensy/avr/cores/teensy3/usb_joystick.h",
		"/C/arduino-1.8.11/hardware/teensy/avr/cores/teensy3/WProgram.h",
		"/C/arduino-1.8.11/hardware/teensy/avr/cores/teensy3/usb_joystick.c",
		"/C/arduino-1.8.11/hardware/teensy/avr/cores/teensy3/usb_desc.c",
		"/C/arduino-1.8.11/hardware/teensy/avr/cores/teensy4/pins_arduino.h",
		"/C/arduino-1.8.11/hardware/teensy/avr/libraries/Encoder/utility/direct_pin_read.h",
		"/C/arduino-1.8.11/hardware/teensy/avr/libraries/Encoder/Encoder.h"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 113.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"DMASettings",
			"unused",
			"flush",
			"genericwrite",
			"::timedread",
			"->print",
			".print",
			"printf",
			"genericRead_Blocking_s16",
			"read"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "_Phoenix_Driver_lss.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39595,
						"regions":
						{
						},
						"selection":
						[
							[
								387,
								387
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/D/GitHub/LSS_Library_Arduino/src/LSS.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10711,
						"regions":
						{
						},
						"selection":
						[
							[
								7634,
								7634
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5557.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "LSS_Phoenix.ino",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1943,
						"regions":
						{
						},
						"selection":
						[
							[
								813,
								813
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 352.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Users/kurte/Documents/Arduino/Github/LSS_Test_sketches/LSSTestServos/LSSTestServos.ino",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30933,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3168.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5666,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										231,
										236
									],
									[
										486,
										491
									],
									[
										639,
										644
									],
									[
										874,
										879
									],
									[
										1112,
										1117
									],
									[
										1322,
										1327
									],
									[
										1542,
										1547
									],
									[
										1761,
										1766
									],
									[
										1975,
										1980
									],
									[
										2273,
										2278
									],
									[
										2580,
										2585
									],
									[
										3135,
										3141
									],
									[
										3407,
										3413
									],
									[
										3777,
										3783
									],
									[
										4111,
										4117
									],
									[
										4535,
										4541
									],
									[
										4807,
										4813
									],
									[
										5177,
										5183
									],
									[
										5511,
										5517
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								5619,
								5619
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 4,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2992.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Hex_Cfg.h",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13209,
						"regions":
						{
						},
						"selection":
						[
							[
								9090,
								9090
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 3360.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.deviot":
	{
		"height": 150.0
	},
	"output.exec":
	{
		"height": 336.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.reg_replace":
	{
		"height": 313.0
	},
	"output.unsaved_changes":
	{
		"height": 363.0
	},
	"pinned_build_system": "Packages/User/Teensy.sublime-build",
	"project": "LSS_Phoenix.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"550",
				"ArduCAM\\examples\\mini\\ArduCAM_Mini_5MP_OV5640_AutoFocus\\ArduCAM_Mini_5MP_OV5640_AutoFocus.ino"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"D:\\GitHub\\LSS_Library_Arduino\\examples\\LSS_Query\\LSS_Query.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "CCM_CCGR2",
		"selected_items":
		[
			[
				"CCM_CCGR2",
				"CCM_CCGR2"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 355.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
